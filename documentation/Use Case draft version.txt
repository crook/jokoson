DB design Issue:
    1. Short the id name
    2. Consider to adopt MongoDB
    3. Add Admin table
    4. Add Company table
    5. Add Role Table
    6. Add Vendor Table
    8. Add SN/Disc to Equip
    9. Add Catagory table which id is one of foriegn keys of equip
    10. Add hist table, key is a incremental id 'order id', 'equip id', 
    11. Equip id is one of FK of sensor
    12. Remove 'isequiped' from gpssensor
    13. The type of status should be Int not boolean
    14. Add hight to gpsdata table
   


    
User Cases from Customer view:
1. user login from wechat(wechat id) or webpage(user, pws)
    *a) if there isn't user mapping for the wechat id, prompt register page


2. After login, show Equp List/Order List.

3. Brower Equps, Place Order and Apply. Then user can review order list


User Cases from Admin's view:
1. Login 
REST API
{
    user: xxx,
    password: xxx
}

2. Show renting equips with status on map.
Rest API from Ray:
    1. api/equip/  get all equips    
    {
        equip: {
            id: xxx,
            model: xxx,
            company_name: xxx,
            gps_status: working?,
            gps_latest_position_x: 132,
            gps_latest_position_y: 23, 
        }
    }
    
    2. filter for equip: filter by model, status, illegual?
    
3. Admin can click one specify equip to view  detailed info 
show last one week gps data?

 